!function(){"use strict";function e(e,t){return{templateUrl:"partials/search-results/item.html",restrict:"E",link:function(r,i,l){e(function(){r.$last&&t.ticketResults.refresh()},0)}}}angular.module("ticketingApp.Controller",[]).controller("TicketingSearchCtrl",["$timeout","$filter","$location","savedFilter","ticketingService","angularGridInstance",function(e,t,r,i,l,n){var a=this;function o(){a.all=[],a.filteredTickets=[],a.stationList=[],a.loadingStatus="",a.orderBy="TicketCurrentAmount",a.limit=parseInt(r.search().limit)||6,a.postJSON={AllowBus:r.search().AllowBus||null,AllowMetro:r.search().AllowMetro||null,AllowTrain:r.search().AllowTrain||null,PassengerType:r.search().PassengerType||"",TimeBand:r.search().TimeBand||"",Brand:r.search().Brand||null,StationNames:[]},a.clearModes=c,a.postedJSON={}}a.submit=s,a.clearFilter=function(){r.url("").replace(),o()},a.getStations=function(){l.getStations().then(function(e){a.stationList=e})},a.updateGrid=function(){e(function(){e(function(){a.filteredTickets.length&&(n.ticketResults.refresh(),i.set("url",r.url()))},82,!1)},82,!1)},a.update=function(){var e=a.all;console.log(a.searchFilters),angular.forEach(a.searchFilters,function(e,t){(-1!==t.indexOf("Allow")&&e||0==e&&-1===t.indexOf("Allow"))&&delete a.searchFilters[t]}),e=t("filter")(e,a.searchFilters),a.filteredTickets=t("orderBy")(e,a.orderBy),console.log(a.filteredTickets),console.log(a.searchFilters),a.updateGrid()},a.loadMore=function(){a.limit+=6,r.search("limit",a.limit),a.updateGrid()},a.filterButtons={Operator:[],OperatorLength:0,BusTravelArea:[],RailZoneFrom:[],RailZoneTo:[]},a.toggleFilter=function(e){a.filterButtons[e]=!a.filterButtons[e]},o(),r.search().AllowBus||r.search().AllowMetro||r.search().AllowTrain||r.search().Brand&&r.search().PassengerType&&r.search().TimeBand||r.search().StationNames?s(a.postJSON):r.url("").replace();function s(e){a.loadingStatus="loading",angular.copy(a.postJSON,a.postedJSON),r.search({AllowBus:a.postedJSON.AllowBus,AllowTrain:a.postedJSON.AllowTrain,AllowMetro:a.postedJSON.AllowMetro,PassengerType:a.postedJSON.PassengerType,TimeBand:a.postedJSON.TimeBand,Brand:a.postedJSON.Brand,StationNames:[a.postJSON.StationNames],limit:a.limit}),a.searchFilters={},console.log("this is posted"),console.log(a.postedJSON),l.ticketSearch(e).then(function(e){a.all=e,angular.forEach(a.all,function(e){-1==a.filterButtons.Operator.indexOf(e.Operator)&&a.filterButtons.Operator.push(e.Operator),-1==a.filterButtons.BusTravelArea.indexOf(e.BusTravelArea)&&a.filterButtons.BusTravelArea.push(e.BusTravelArea),-1==a.filterButtons.RailZoneFrom.indexOf(e.RailZoneFrom)&&a.filterButtons.RailZoneFrom.push(e.RailZoneFrom),-1==a.filterButtons.RailZoneTo.indexOf(e.RailZoneTo)&&a.filterButtons.RailZoneTo.push(e.RailZoneTo)}),a.update(),a.loadingStatus="success"})}function c(){a.postJSON.AllowBus=null,a.postJSON.AllowTrain=null,a.postJSON.AllowMetro=null,a.postJSON.StationNames=null}}]).filter("removeHTMLTags",[function(){return function(e){return e?String(e).replace(/<[^>]+>/gm,""):""}}]).filter("modeFilter",[function(){return function(t,r){return angular.forEach({},function(t,r){console.log(r,t),console.log(e[r])}),angular.forEach(t,function(e){}),[]}}]).filter("escapeFilter",[function(){return function(e){return e=e.replace(/\n/g,"<br><br>")}}]).directive("initialSearch",[function(){return{templateUrl:"partials/search-results/initial-search.html",restrict:"E"}}]).directive("searchResults",[function(){return{templateUrl:"partials/search-results/search-results.html",restrict:"E"}}]).directive("filters",[function(){return{templateUrl:"partials/search-results/filters.html",restrict:"E"}}]).directive("item",["$timeout","angularGridInstance",e]).controller("TicketDetailCtrl",["ticketingService","$interval","getURL","$routeParams",function(e,t,r,i){var l=this;l.loadingText="Loading...",l.loadingStatus="Loading",l.loadingArray=["Well, what are you waiting for?","Are we there yet?","Warming up the processors...","Reconfiguring the office coffee machine...","Doing something useful...","Are you ready?","So, do you come here often?","This may take some time...","I know this is painful to watch, but I have to load this.","Oh, no! Loading time...","Still Waiting... huh","Waiting for something in the server.","Creating randomly generated feature.","It's not you. It's me.","Eating your internet cookies...Yummy!"],l.loading=t(function(){l.loadingText=l.loadingArray[Math.round(Math.random()*(l.loadingArray.length-1))]},3500),l.ticketID=i.ticket,l.filterAccordions={},l.relatedTickets={},l.toggleClick=function(e){l.filterAccordions[e]=!l.filterAccordions[e]},n=l.ticketID,e.getTicket(n).then(function(t){l.all=t,console.log(t),l.all.RelatedTickets.length?angular.forEach(l.all.RelatedTickets,function(t){e.getSimpleTicket(t.Id).then(function(e){l.relatedTickets[t.Id]=e,console.log(l.relatedTickets),l.loadingStatus="Success"})}):l.loadingStatus="Success",l.all.Documents.length?e.getTerms(n).then(function(e){l.relatedTerms=e,l.loadingStatus="Success"}):l.loadingStatus="Success",l.backToSearch=r,console.log(l.backToSearch)});var n}]).directive("detailDetails",[function(){return{templateUrl:"partials/detail/details.html",restrict:"E"}}]).directive("detailSidebar",[function(){return{templateUrl:"partials/detail/sidebar.html",restrict:"E"}}]).directive("detailAlternative",[function(){return{templateUrl:"partials/detail/alternative.html",restrict:"E"}}]).directive("detailRelated",[function(){return{templateUrl:"partials/detail/related-product.html",restrict:"E"}}])}();